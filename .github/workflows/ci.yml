name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  UV_VERSION: "0.5.9"
  PYTHON_VERSION: "3.13"

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint and Format Check

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run ruff check
      run: uv run ruff check

    - name: Run ruff format check
      run: uv run ruff format --check

  type-check:
    runs-on: ubuntu-latest
    name: Type Check

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run mypy
      run: uv run mypy src/

  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  terraform-validate:
    runs-on: ubuntu-latest
    name: Terraform Validation

    steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "~1.9.0"

    - name: Terraform format check
      run: terraform fmt -check -recursive terraform/

    - name: Terraform validate (production)
      run: |
        cd terraform/environments/production
        terraform init -backend=false
        terraform validate
